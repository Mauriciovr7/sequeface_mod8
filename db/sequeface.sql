-- creadas por sequelize desde models

-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Comments"
(
    id integer NOT NULL DEFAULT nextval('"Comments_id_seq"'::regclass),
    comment text COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp with time zone NOT NULL,
    "updatedAt" timestamp with time zone NOT NULL,
    "UserId" integer,
    "MessageId" integer,
    CONSTRAINT "Comments_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Messages"
(
    id integer NOT NULL DEFAULT nextval('"Messages_id_seq"'::regclass),
    message text COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp with time zone NOT NULL,
    "updatedAt" timestamp with time zone NOT NULL,
    "UserId" integer,
    CONSTRAINT "Messages_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Users"
(
    id integer NOT NULL DEFAULT nextval('"Users_id_seq"'::regclass),
    "firstName" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "lastName" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp with time zone NOT NULL,
    "updatedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "Users_pkey" PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public."Comments"
    ADD CONSTRAINT "Comments_MessageId_fkey" FOREIGN KEY ("MessageId")
    REFERENCES public."Messages" (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public."Comments"
    ADD CONSTRAINT "Comments_UserId_fkey" FOREIGN KEY ("UserId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public."Messages"
    ADD CONSTRAINT "Messages_UserId_fkey" FOREIGN KEY ("UserId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;

END;